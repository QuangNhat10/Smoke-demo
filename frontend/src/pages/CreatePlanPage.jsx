import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import Header from '../components/Header';
import SecondaryNavigation from '../components/SecondaryNavigation';
import { quitPlanApi } from '../api/quitPlanApi';

// Component t·∫°o k·∫ø ho·∫°ch cai thu·ªëc m·ªõi
const CreatePlanPage = () => {
    const navigate = useNavigate();
    // State qu·∫£n l√Ω tr·∫°ng th√°i k·∫ø ho·∫°ch hi·ªán c√≥
    const [hasExistingPlan, setHasExistingPlan] = useState(false);
    const [loading, setLoading] = useState(true);
    const [existingPlan, setExistingPlan] = useState(null);
    // State qu·∫£n l√Ω hi·ªÉn th·ªã ph·∫ßn t√πy ch·ªçn n√¢ng cao
    const [showAdvanced, setShowAdvanced] = useState(false);
    // State qu·∫£n l√Ω d·ªØ li·ªáu form
    const [formData, setFormData] = useState({
        cigarettesPerDay: '', // S·ªë ƒëi·∫øu h√∫t m·ªói ng√†y
        cigarettesPerPack: 20, // S·ªë ƒëi·∫øu trong m·ªôt g√≥i
        pricePerPack: '', // Gi√° m·ªôt g√≥i
        yearsSmoked: '', // S·ªë nƒÉm ƒë√£ h√∫t
        quitDate: '', // Ng√†y d·ª± ki·∫øn cai
        reasons: [], // L√Ω do cai thu·ªëc
        otherReason: '', // L√Ω do kh√°c
        difficulty: 'medium', // M·ª©c ƒë·ªô kh√≥ khƒÉn
        supportNeeded: [], // H√¨nh th·ª©c h·ªó tr·ª£ c·∫ßn thi·∫øt
        triggers: [], // Y·∫øu t·ªë k√≠ch th√≠ch h√∫t thu·ªëc
        otherTrigger: '', // Y·∫øu t·ªë k√≠ch th√≠ch kh√°c
        motivation: '' // ƒê·ªông l·ª±c cai thu·ªëc
    });

    // Danh s√°ch c√°c l√Ω do cai thu·ªëc
    const reasonOptions = [
        'S·ª©c kh·ªèe',
        'Ti·∫øt ki·ªám chi ph√≠',
        'Gia ƒë√¨nh',
        'Ngo·∫°i h√¨nh',
        '√Åp l·ª±c x√£ h·ªôi',
        'M√πi h√¥i',
        'Kh√°c'
    ];

    // Danh s√°ch c√°c h√¨nh th·ª©c h·ªó tr·ª£
    const supportOptions = [
        'T∆∞ v·∫•n b√°c sƒ©',
        'H·ªó tr·ª£ gia ƒë√¨nh',
        'Nh√≥m h·ªó tr·ª£ tr·ª±c tuy·∫øn',
        'Nicotine thay th·∫ø',
        'Thu·ªëc k√™ ƒë∆°n'
    ];

    // Danh s√°ch c√°c y·∫øu t·ªë k√≠ch th√≠ch
    const triggerOptions = [
        'Stress/CƒÉng th·∫≥ng',
        'Sau b·ªØa ƒÉn',
        'C√† ph√™',
        'R∆∞·ª£u bia',
        'B·∫°n b√® h√∫t thu·ªëc',
        'Th√≥i quen bu·ªïi s√°ng',
        'Kh√°c'
    ];

    // Ki·ªÉm tra k·∫ø ho·∫°ch ƒëang ho·∫°t ƒë·ªông khi component load
    useEffect(() => {
        const checkExistingPlan = async () => {
            try {
                setLoading(true);
                const result = await quitPlanApi.getActiveQuitPlan();
                if (result && result.data) {
                    setHasExistingPlan(true);
                    setExistingPlan(result.data);
                } else {
                    setHasExistingPlan(false);
                    setExistingPlan(null);
                }
            } catch (error) {
                console.error('Error checking existing plan:', error);
                // N·∫øu l·ªói 404 (kh√¥ng c√≥ k·∫ø ho·∫°ch) th√¨ cho ph√©p t·∫°o m·ªõi
                if (error.response?.status === 404) {
                    setHasExistingPlan(false);
                    setExistingPlan(null);
                } else {
                    // C√°c l·ªói kh√°c c√≥ th·ªÉ do authentication
                    console.error('Error loading plan:', error);
                }
            } finally {
                setLoading(false);
            }
        };

        checkExistingPlan();
    }, []);

    // X·ª≠ l√Ω thay ƒë·ªïi gi√° tr·ªã input
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    // X·ª≠ l√Ω thay ƒë·ªïi checkbox
    const handleCheckboxChange = (e, category) => {
        const { value, checked } = e.target;
        setFormData(prev => ({
            ...prev,
            [category]: checked
                ? [...prev[category], value]
                : prev[category].filter(item => item !== value)
        }));
    };

    // T√≠nh to√°n chi ph√≠ h√∫t thu·ªëc h√†ng ng√†y
    const calculateDailyCost = () => {
        const cigarettesPerDay = parseFloat(formData.cigarettesPerDay) || 0;
        const pricePerPack = parseFloat(formData.pricePerPack) || 0;
        const cigarettesPerPack = parseFloat(formData.cigarettesPerPack) || 20;
        return (cigarettesPerDay * pricePerPack / cigarettesPerPack).toFixed(2);
    };

    // X·ª≠ l√Ω khi submit form
    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            // Chu·∫©n b·ªã d·ªØ li·ªáu ƒë·ªÉ g·ª≠i l√™n API
            const planData = {
                cigarettesPerDay: parseInt(formData.cigarettesPerDay),
                cigarettesPerPack: parseInt(formData.cigarettesPerPack),
                pricePerPack: parseFloat(formData.pricePerPack),
                yearsSmoked: parseInt(formData.yearsSmoked),
                quitDate: formData.quitDate || null,
                reasons: formData.reasons,
                otherReason: formData.otherReason,
                difficulty: formData.difficulty,
                supportNeeded: formData.supportNeeded,
                triggers: formData.triggers,
                otherTrigger: formData.otherTrigger,
                motivation: formData.motivation
            };

            // G·ªçi API ƒë·ªÉ t·∫°o k·∫ø ho·∫°ch
            const response = await quitPlanApi.createQuitPlan(planData);

            // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
            alert(response.message || 'T·∫°o k·∫ø ho·∫°ch cai thu·ªëc th√†nh c√¥ng!');

            // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang dashboard
            navigate('/dashboard-member');

        } catch (error) {
            console.error('L·ªói khi t·∫°o k·∫ø ho·∫°ch:', error);
            const errorMessage = error.response?.data?.message || 'C√≥ l·ªói x·∫£y ra khi t·∫°o k·∫ø ho·∫°ch. Vui l√≤ng th·ª≠ l·∫°i.';
            alert(errorMessage);
        }
    };

    return (
        // Container ch√≠nh v·ªõi gradient background
        <div style={{
            minHeight: '100vh',
            background: 'linear-gradient(135deg, #f0f7fa 0%, #d5f1e8 100%)'
        }}>
            <Header />
            <SecondaryNavigation />

            {/* Container n·ªôi dung */}
            <div style={{
                maxWidth: '800px',
                margin: '2rem auto',
                padding: '2rem',
                backgroundColor: 'white',
                borderRadius: '15px',
                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'
            }}>
                {loading ? (
                    // Loading state
                    <div style={{
                        textAlign: 'center',
                        padding: '4rem 2rem'
                    }}>
                        <h2 style={{ color: '#2C9085', marginBottom: '1rem' }}>ƒêang ki·ªÉm tra...</h2>
                        <p style={{ color: '#7f8c8d' }}>Vui l√≤ng ch·ªù trong gi√¢y l√°t</p>
                    </div>
                ) : hasExistingPlan ? (
                    // Hi·ªÉn th·ªã khi ƒë√£ c√≥ k·∫ø ho·∫°ch
                    <div style={{ textAlign: 'center', padding: '2rem' }}>
                        <h1 style={{
                            color: '#2C9085',
                            marginBottom: '2rem'
                        }}>B·∫°n ƒê√£ C√≥ K·∫ø Ho·∫°ch Cai Thu·ªëc</h1>

                        <div style={{
                            backgroundColor: '#f0f9f8',
                            padding: '2rem',
                            borderRadius: '12px',
                            marginBottom: '2rem',
                            border: '2px solid #2C9085'
                        }}>
                            <h3 style={{
                                color: '#2C9085',
                                marginBottom: '1rem',
                                fontSize: '1.5rem'
                            }}>
                                üéØ K·∫ø Ho·∫°ch ƒêang Ho·∫°t ƒê·ªông
                            </h3>

                            <div style={{
                                display: 'grid',
                                gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                                gap: '1rem',
                                marginBottom: '1.5rem'
                            }}>
                                <div style={{
                                    backgroundColor: 'white',
                                    padding: '1rem',
                                    borderRadius: '8px',
                                    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
                                }}>
                                    <h4 style={{ color: '#2C9085', marginBottom: '0.5rem' }}>Ng√†y kh√¥ng h√∫t thu·ªëc</h4>
                                    <p style={{
                                        fontSize: '2rem',
                                        fontWeight: 'bold',
                                        color: '#27ae60',
                                        margin: 0
                                    }}>
                                        {existingPlan?.daysSmokeFree || 0}
                                    </p>
                                </div>

                                <div style={{
                                    backgroundColor: 'white',
                                    padding: '1rem',
                                    borderRadius: '8px',
                                    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
                                }}>
                                    <h4 style={{ color: '#2C9085', marginBottom: '0.5rem' }}>Ti·ªÅn ti·∫øt ki·ªám</h4>
                                    <p style={{
                                        fontSize: '1.5rem',
                                        fontWeight: 'bold',
                                        color: '#f39c12',
                                        margin: 0
                                    }}>
                                        {new Intl.NumberFormat('vi-VN', {
                                            style: 'currency',
                                            currency: 'VND'
                                        }).format(existingPlan?.totalMoneySaved || 0)}
                                    </p>
                                </div>
                            </div>

                            <p style={{
                                color: '#7f8c8d',
                                fontSize: '1.1rem',
                                marginBottom: '2rem'
                            }}>
                                B·∫°n ƒë√£ c√≥ m·ªôt k·∫ø ho·∫°ch cai thu·ªëc ƒëang ho·∫°t ƒë·ªông.
                                H√£y ti·∫øp t·ª•c theo d√µi ti·∫øn tr√¨nh c·ªßa m√¨nh t·∫°i Dashboard!
                            </p>
                        </div>

                        <div style={{
                            display: 'flex',
                            gap: '1rem',
                            justifyContent: 'center',
                            flexWrap: 'wrap'
                        }}>
                            <button
                                onClick={() => navigate('/dashboard-member')}
                                style={{
                                    padding: '1rem 2rem',
                                    backgroundColor: '#2C9085',
                                    color: 'white',
                                    border: 'none',
                                    borderRadius: '8px',
                                    cursor: 'pointer',
                                    fontWeight: '600',
                                    fontSize: '1.1rem',
                                    transition: 'all 0.3s ease',
                                    boxShadow: '0 4px 12px rgba(44, 144, 133, 0.3)'
                                }}
                                onMouseOver={(e) => {
                                    e.target.style.backgroundColor = '#25807a';
                                    e.target.style.transform = 'translateY(-2px)';
                                }}
                                onMouseOut={(e) => {
                                    e.target.style.backgroundColor = '#2C9085';
                                    e.target.style.transform = 'translateY(0)';
                                }}
                            >
                                üìä V·ªÅ Dashboard
                            </button>

                            <button
                                onClick={() => navigate('/track-status')}
                                style={{
                                    padding: '1rem 2rem',
                                    backgroundColor: '#27ae60',
                                    color: 'white',
                                    border: 'none',
                                    borderRadius: '8px',
                                    cursor: 'pointer',
                                    fontWeight: '600',
                                    fontSize: '1.1rem',
                                    transition: 'all 0.3s ease',
                                    boxShadow: '0 4px 12px rgba(39, 174, 96, 0.3)'
                                }}
                                onMouseOver={(e) => {
                                    e.target.style.backgroundColor = '#229954';
                                    e.target.style.transform = 'translateY(-2px)';
                                }}
                                onMouseOut={(e) => {
                                    e.target.style.backgroundColor = '#27ae60';
                                    e.target.style.transform = 'translateY(0)';
                                }}
                            >
                                üìà Theo D√µi Ti·∫øn Tr√¨nh
                            </button>
                        </div>
                    </div>
                ) : (
                    // Hi·ªÉn th·ªã form t·∫°o k·∫ø ho·∫°ch m·ªõi
                    <>
                        <h1 style={{
                            color: '#2C9085',
                            marginBottom: '2rem',
                            textAlign: 'center'
                        }}>T·∫°o K·∫ø Ho·∫°ch Cai Thu·ªëc</h1>

                        <form onSubmit={handleSubmit}>
                            {/* Ph·∫ßn th√¥ng tin c∆° b·∫£n */}
                            <div style={{ marginBottom: '2rem' }}>
                                <h2 style={{
                                    color: '#2C9085',
                                    fontSize: '1.5rem',
                                    marginBottom: '1.5rem'
                                }}>Th√¥ng Tin C∆° B·∫£n</h2>

                                <div style={{
                                    display: 'grid',
                                    gap: '1rem',
                                    gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))'
                                }}>
                                    <div>
                                        <label style={{
                                            display: 'block',
                                            marginBottom: '0.5rem',
                                            color: '#4a5568',
                                            fontWeight: '500'
                                        }}>
                                            S·ªë ƒëi·∫øu thu·ªëc h√∫t m·ªói ng√†y
                                        </label>
                                        <input
                                            type="number"
                                            name="cigarettesPerDay"
                                            value={formData.cigarettesPerDay}
                                            onChange={handleInputChange}
                                            required
                                            style={{
                                                width: '100%',
                                                padding: '0.75rem',
                                                borderRadius: '8px',
                                                border: '1px solid #e2e8f0',
                                                fontSize: '1rem'
                                            }}
                                        />
                                    </div>

                                    <div>
                                        <label style={{
                                            display: 'block',
                                            marginBottom: '0.5rem',
                                            color: '#4a5568',
                                            fontWeight: '500'
                                        }}>
                                            S·ªë ƒëi·∫øu trong m·ªôt g√≥i
                                        </label>
                                        <input
                                            type="number"
                                            name="cigarettesPerPack"
                                            value={formData.cigarettesPerPack}
                                            onChange={handleInputChange}
                                            required
                                            style={{
                                                width: '100%',
                                                padding: '0.75rem',
                                                borderRadius: '8px',
                                                border: '1px solid #e2e8f0',
                                                fontSize: '1rem'
                                            }}
                                        />
                                    </div>

                                    <div>
                                        <label style={{
                                            display: 'block',
                                            marginBottom: '0.5rem',
                                            color: '#4a5568',
                                            fontWeight: '500'
                                        }}>
                                            Gi√° m·ªôt g√≥i thu·ªëc (VNƒê)
                                        </label>
                                        <input
                                            type="number"
                                            name="pricePerPack"
                                            value={formData.pricePerPack}
                                            onChange={handleInputChange}
                                            required
                                            style={{
                                                width: '100%',
                                                padding: '0.75rem',
                                                borderRadius: '8px',
                                                border: '1px solid #e2e8f0',
                                                fontSize: '1rem'
                                            }}
                                        />
                                    </div>

                                    <div>
                                        <label style={{
                                            display: 'block',
                                            marginBottom: '0.5rem',
                                            color: '#4a5568',
                                            fontWeight: '500'
                                        }}>
                                            S·ªë nƒÉm ƒë√£ h√∫t thu·ªëc
                                        </label>
                                        <input
                                            type="number"
                                            name="yearsSmoked"
                                            value={formData.yearsSmoked}
                                            onChange={handleInputChange}
                                            required
                                            style={{
                                                width: '100%',
                                                padding: '0.75rem',
                                                borderRadius: '8px',
                                                border: '1px solid #e2e8f0',
                                                fontSize: '1rem'
                                            }}
                                        />
                                    </div>
                                </div>

                                {/* Chi ph√≠ h√†ng ng√†y */}
                                <div style={{
                                    marginTop: '1rem',
                                    padding: '1rem',
                                    backgroundColor: '#f7fafc',
                                    borderRadius: '8px',
                                    textAlign: 'center'
                                }}>
                                    <p style={{ color: '#4a5568' }}>Chi ph√≠ h√∫t thu·ªëc m·ªói ng√†y:</p>
                                    <p style={{
                                        color: '#2C9085',
                                        fontSize: '1.5rem',
                                        fontWeight: '600'
                                    }}>
                                        {calculateDailyCost()} VNƒê
                                    </p>
                                </div>
                            </div>

                            {/* N√∫t hi·ªÉn th·ªã t√πy ch·ªçn n√¢ng cao */}
                            <button
                                type="button"
                                onClick={() => setShowAdvanced(!showAdvanced)}
                                style={{
                                    width: '100%',
                                    padding: '1rem',
                                    marginBottom: '2rem',
                                    backgroundColor: '#f7fafc',
                                    border: '1px solid #e2e8f0',
                                    borderRadius: '8px',
                                    color: '#2C9085',
                                    fontWeight: '500',
                                    cursor: 'pointer',
                                    display: 'flex',
                                    alignItems: 'center',
                                    justifyContent: 'center',
                                    gap: '0.5rem'
                                }}
                            >
                                {showAdvanced ? '·∫®n t√πy ch·ªçn n√¢ng cao' : 'Hi·ªán t√πy ch·ªçn n√¢ng cao'}
                                <span style={{
                                    transform: showAdvanced ? 'rotate(180deg)' : 'rotate(0)',
                                    transition: 'transform 0.3s ease'
                                }}>‚ñæ</span>
                            </button>

                            {/* Ph·∫ßn t√πy ch·ªçn n√¢ng cao */}
                            {showAdvanced && (
                                <div style={{ marginBottom: '2rem' }}>
                                    <div style={{ marginBottom: '2rem' }}>
                                        <h3 style={{
                                            color: '#2C9085',
                                            marginBottom: '1rem'
                                        }}>Ng√†y D·ª± Ki·∫øn Cai Thu·ªëc</h3>
                                        <input
                                            type="date"
                                            name="quitDate"
                                            value={formData.quitDate}
                                            onChange={handleInputChange}
                                            style={{
                                                width: '100%',
                                                padding: '0.75rem',
                                                borderRadius: '8px',
                                                border: '1px solid #e2e8f0',
                                                fontSize: '1rem'
                                            }}
                                        />
                                    </div>

                                    <div style={{ marginBottom: '2rem' }}>
                                        <h3 style={{
                                            color: '#2C9085',
                                            marginBottom: '1rem'
                                        }}>L√Ω Do Cai Thu·ªëc</h3>
                                        <div style={{
                                            display: 'grid',
                                            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                                            gap: '1rem'
                                        }}>
                                            {reasonOptions.map(reason => (
                                                <label key={reason} style={{
                                                    display: 'flex',
                                                    alignItems: 'center',
                                                    gap: '0.5rem'
                                                }}>
                                                    <input
                                                        type="checkbox"
                                                        value={reason}
                                                        checked={formData.reasons.includes(reason)}
                                                        onChange={(e) => handleCheckboxChange(e, 'reasons')}
                                                    />
                                                    {reason}
                                                </label>
                                            ))}
                                        </div>
                                        {formData.reasons.includes('Kh√°c') && (
                                            <input
                                                type="text"
                                                name="otherReason"
                                                value={formData.otherReason}
                                                onChange={handleInputChange}
                                                placeholder="Nh·∫≠p l√Ω do kh√°c..."
                                                style={{
                                                    width: '100%',
                                                    marginTop: '1rem',
                                                    padding: '0.75rem',
                                                    borderRadius: '8px',
                                                    border: '1px solid #e2e8f0'
                                                }}
                                            />
                                        )}
                                    </div>

                                    <div style={{ marginBottom: '2rem' }}>
                                        <h3 style={{
                                            color: '#2C9085',
                                            marginBottom: '1rem'
                                        }}>M·ª©c ƒê·ªô Kh√≥ KhƒÉn D·ª± Ki·∫øn</h3>
                                        <select
                                            name="difficulty"
                                            value={formData.difficulty}
                                            onChange={handleInputChange}
                                            style={{
                                                width: '100%',
                                                padding: '0.75rem',
                                                borderRadius: '8px',
                                                border: '1px solid #e2e8f0',
                                                fontSize: '1rem'
                                            }}
                                        >
                                            <option value="easy">D·ªÖ - T√¥i ƒë√£ s·∫µn s√†ng</option>
                                            <option value="medium">Trung b√¨nh - C·∫ßn n·ªó l·ª±c</option>
                                            <option value="hard">Kh√≥ - C·∫ßn nhi·ªÅu h·ªó tr·ª£</option>
                                        </select>
                                    </div>

                                    <div style={{ marginBottom: '2rem' }}>
                                        <h3 style={{
                                            color: '#2C9085',
                                            marginBottom: '1rem'
                                        }}>H√¨nh Th·ª©c H·ªó Tr·ª£ Mong Mu·ªën</h3>
                                        <div style={{
                                            display: 'grid',
                                            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                                            gap: '1rem'
                                        }}>
                                            {supportOptions.map(support => (
                                                <label key={support} style={{
                                                    display: 'flex',
                                                    alignItems: 'center',
                                                    gap: '0.5rem'
                                                }}>
                                                    <input
                                                        type="checkbox"
                                                        value={support}
                                                        checked={formData.supportNeeded.includes(support)}
                                                        onChange={(e) => handleCheckboxChange(e, 'supportNeeded')}
                                                    />
                                                    {support}
                                                </label>
                                            ))}
                                        </div>
                                    </div>

                                    <div style={{ marginBottom: '2rem' }}>
                                        <h3 style={{
                                            color: '#2C9085',
                                            marginBottom: '1rem'
                                        }}>Y·∫øu T·ªë K√≠ch Th√≠ch H√∫t Thu·ªëc</h3>
                                        <div style={{
                                            display: 'grid',
                                            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                                            gap: '1rem'
                                        }}>
                                            {triggerOptions.map(trigger => (
                                                <label key={trigger} style={{
                                                    display: 'flex',
                                                    alignItems: 'center',
                                                    gap: '0.5rem'
                                                }}>
                                                    <input
                                                        type="checkbox"
                                                        value={trigger}
                                                        checked={formData.triggers.includes(trigger)}
                                                        onChange={(e) => handleCheckboxChange(e, 'triggers')}
                                                    />
                                                    {trigger}
                                                </label>
                                            ))}
                                        </div>
                                        {formData.triggers.includes('Kh√°c') && (
                                            <input
                                                type="text"
                                                name="otherTrigger"
                                                value={formData.otherTrigger}
                                                onChange={handleInputChange}
                                                placeholder="Nh·∫≠p y·∫øu t·ªë kh√°c..."
                                                style={{
                                                    width: '100%',
                                                    marginTop: '1rem',
                                                    padding: '0.75rem',
                                                    borderRadius: '8px',
                                                    border: '1px solid #e2e8f0'
                                                }}
                                            />
                                        )}
                                    </div>

                                    <div style={{ marginBottom: '2rem' }}>
                                        <h3 style={{
                                            color: '#2C9085',
                                            marginBottom: '1rem'
                                        }}>ƒê·ªông L·ª±c Cai Thu·ªëc</h3>
                                        <textarea
                                            name="motivation"
                                            value={formData.motivation}
                                            onChange={handleInputChange}
                                            placeholder="H√£y vi·∫øt v·ªÅ ƒë·ªông l·ª±c c·ªßa b·∫°n ƒë·ªÉ cai thu·ªëc..."
                                            style={{
                                                width: '100%',
                                                padding: '0.75rem',
                                                borderRadius: '8px',
                                                border: '1px solid #e2e8f0',
                                                fontSize: '1rem',
                                                minHeight: '100px',
                                                resize: 'vertical'
                                            }}
                                        />
                                    </div>
                                </div>
                            )}

                            {/* C√°c n√∫t ƒëi·ªÅu khi·ªÉn */}
                            <div style={{
                                display: 'flex',
                                gap: '1rem',
                                justifyContent: 'center'
                            }}>
                                {/* N√∫t h·ªßy */}
                                <button
                                    type="button"
                                    onClick={() => navigate('/dashboard-member')}
                                    style={{
                                        padding: '1rem 2rem',
                                        borderRadius: '8px',
                                        border: '1px solid #2C9085',
                                        backgroundColor: 'white',
                                        color: '#2C9085',
                                        fontWeight: '500',
                                        cursor: 'pointer'
                                    }}
                                >
                                    H·ªßy
                                </button>
                                {/* N√∫t t·∫°o k·∫ø ho·∫°ch */}
                                <button
                                    type="submit"
                                    style={{
                                        padding: '1rem 2rem',
                                        borderRadius: '8px',
                                        border: 'none',
                                        backgroundColor: '#2C9085',
                                        color: 'white',
                                        fontWeight: '500',
                                        cursor: 'pointer'
                                    }}
                                >
                                    T·∫°o K·∫ø Ho·∫°ch
                                </button>
                            </div>
                        </form>
                    </>
                )}
            </div>
        </div>
    );
};

export default CreatePlanPage; 